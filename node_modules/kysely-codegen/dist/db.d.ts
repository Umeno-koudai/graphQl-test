/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Authors {
  created_at: Generated<Date>;
  id: Generated<number>;
  name: string;
  updated_at: Generated<Date>;
}

export interface Books {
  author_id: number;
  created_at: Generated<Date>;
  id: Generated<number>;
  isbn: string | null;
  title: string;
  updated_at: Generated<Date>;
}

export interface ReadList {
  book_id: number;
  created_at: Generated<Date>;
  id: Generated<number>;
  status: Generated<string>;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Users {
  created_at: Generated<Date>;
  email: string;
  id: Generated<number>;
  name: string;
  password_hash: string;
  role: Generated<string>;
  updated_at: Generated<Date>;
}

export interface DB {
  authors: Authors;
  books: Books;
  read_list: ReadList;
  users: Users;
}
